---
layout: post
title:  "Spring Boot Configuration 정리"
date:   2020-01-28 20:19:20 +0900
categories: jekyll update
---
작성 목적 : DDD의 이해를 하기 위한 정리

+ DDD에서 객체지향을 잘 알아야 하는 이유?
    - 추상적인 비지니스 영역의 모델링이 익숙한 방법
      추상적인 비지니스 영역인 Domain을 모델링하여 만들고자 하는 것으로 바꾸는 작업을 하게 됩니다. 이를 도메인 모델링이라고 합니다.
      그리고 도메인은 팀원 각자가 생각하는 것이 다르기 때문에 혼돈이 되지않는 기준이 필요한데, 이를 Context라고 하며, 이를 규정을 하며 모델링을 하게 됩니다.
      즉 만들고자하는 것을 팀원들간 의사소통을 혼돈되지 않게 하며, 비지니스 로직을 만들어나가는 것입니다.
      이러기 위해서는 각 모델들의 역할(행동?)과 데이터들을 혼란스럽지 않게 정돈해야 하는데,
      가장 익숙한 방식이 객체지향이기 때문에 보통 이를 가지고 개발을 하게 된 것 같습니다. 아마 이것이 대두되었던 시대 또한 객체지향이 흥하고 있어서 인것도 
      있는거 같습니다. 
    - 객체지향의 캡슐화
      객체지향의 캡슐화는 팀원들이 객체안의 복잡성에 접근하지 않고, 객체 밖으로 노출된 부분에 접근하겠금하여 복잡도를 줄입니다.
      내부가 아무리 변하더라도, 외부에 노출되어 있는 부분만 바뀌지 않는 다면 객체를 사용하는 사람들은 신경쓰지 않고 객체를 사용할 수 있습니다.
      이를 역으로 말하면 도메인을 외부의 의존성으로 부터 줄여, 도메인 모델 자체에 집중하여 도메인 모델을 만들 수 있게 됩니다.
    - 위의 2가지 이유로 각 팀원들은 도메인을 개발하는 부분과 이외의 부분을 분리 개발하여 생산성을 높히며, 복잡도를 줄 일 수 있기 때문에
      DDD에서 객체지향을 잘 알아야 하는 것 같습니다.